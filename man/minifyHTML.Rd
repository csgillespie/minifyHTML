% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minifyHTML.R
\name{minifyHTML}
\alias{minifyHTML}
\title{HTML Minifier}
\usage{
minifyHTML(input, caseSensitive = FALSE, collapseBooleanAttributes = TRUE,
  collapseInlineTagWhitespace = FALSE, collapseWhitespace = TRUE,
  conservativeCollapse = FALSE, customAttrAssign = "[]",
  customAttrCollapse = "", customAttrSurround = "[]",
  customEventAttributes = "[ /^on[a-z]{3,}$/ ]", decodeEntities = TRUE,
  html5 = TRUE, ignoreCustomComments = "[ /^!/ ]",
  ignoreCustomFragments = "[ /<\%[\\\\s\\\\S]*?\%>/, /<\\\\?[,\\\\s\\\\S]*?\\\\?>/ ]",
  includeAutoGeneratedTags = TRUE, keepClosingSlash = FALSE,
  maxLineLength = NULL, minifyCSS = TRUE, minifyJS = TRUE,
  minifyURLs = FALSE, preserveLineBreaks = FALSE,
  preventAttributesEscaping = FALSE, processConditionalComments = TRUE,
  processScripts = "[]", quoteCharacter = NULL, removeComments = TRUE,
  removeEmptyAttributes = TRUE, removeEmptyElements = FALSE,
  removeOptionalTags = FALSE, removeRedundantAttributes = FALSE,
  removeScriptTypeAttributes = FALSE, removeStyleLinkTypeAttributes = FALSE,
  removeTagWhitespace = FALSE, sortAttributes = TRUE,
  sortClassName = TRUE, trimCustomFragments = TRUE,
  useShortDoctype = TRUE)
}
\arguments{
\item{input}{String}

\item{caseSensitive}{Treat attributes in case sensitive manner (useful for custom HTML tags)}

\item{collapseBooleanAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#collapse_boolean_attributes}{Omit attribute values from boolean attributes}}

\item{collapseInlineTagWhitespace}{Don't leave any spaces between \code{display:inline;} elements when collapsing. Must be used in conjunction with \code{collapseWhitespace=TRUE}}

\item{collapseWhitespace}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#collapse_whitespace}{Collapse white space that contributes to text nodes in a document tree}}

\item{conservativeCollapse}{Always collapse to 1 space (never remove it entirely). Must be used in conjunction with \code{collapseWhitespace=true}}

\item{customAttrAssign}{Arrays of regex'es that allow to support custom attribute assign expressions (e.g. \code{'<div flex?="{{mode != cover}}"></div>'})}

\item{customAttrCollapse}{Regex that specifies custom attribute to strip newlines from (e.g. \code{/ng-class/})}

\item{customAttrSurround}{Arrays of regex'es that allow to support custom attribute surround expressions (e.g. \code{<input {{#if value}}checked="checked"{{/if}}>})}

\item{customEventAttributes}{Arrays of regex'es that allow to support custom event attributes for \code{minifyJS} (e.g. \code{ng-click})}

\item{decodeEntities}{Use direct Unicode characters whenever possible}

\item{html5}{Parse input according to HTML5 specifications}

\item{ignoreCustomComments}{Array of regex'es that allow to ignore certain comments, when matched}

\item{ignoreCustomFragments}{Array of regex'es that allow to ignore certain fragments, when matched (e.g. \code{<?php ... ?>}, \code{{{ ... }}}, etc.)}

\item{includeAutoGeneratedTags}{Insert tags generated by HTML parser}

\item{keepClosingSlash}{Keep the trailing slash on singleton elements}

\item{maxLineLength}{Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points}

\item{minifyCSS}{Minify CSS in style elements and style attributes (uses \href{https://github.com/jakubpawlowicz/clean-css}{clean-css})}

\item{minifyJS}{Minify JavaScript in script elements and event attributes (uses \href{https://github.com/mishoo/UglifyJS2}{UglifyJS})}

\item{minifyURLs}{Minify URLs in various attributes (uses \href{https://github.com/stevenvachon/relateurl}{relateurl})}

\item{preserveLineBreaks}{Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break. Must be used in conjunction with \code{collapseWhitespace=true}}

\item{preventAttributesEscaping}{Prevents the escaping of the values of attributes}

\item{processConditionalComments}{Process contents of conditional comments through minifier}

\item{processScripts}{Array of strings corresponding to types of script elements to process through minifier (e.g. \code{text/ng-template}, \code{text/x-handlebars-template}, etc.)}

\item{quoteCharacter}{Type of quote to use for attribute values (' or ")}

\item{removeComments}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_comments}{Strip HTML comments}}

\item{removeEmptyAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_or_blank_attributes}{Remove all attributes with whitespace-only values}}

\item{removeEmptyElements}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_elements}{Remove all elements with empty contents}}

\item{removeOptionalTags}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_optional_tags}{Remove optional tags}}

\item{removeRedundantAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_redundant_attributes}{Remove attributes when value matches default.}}

\item{removeScriptTypeAttributes}{Remove \code{type="text/javascript"} from \code{script} tags. Other \code{type} attribute values are left intact}

\item{removeStyleLinkTypeAttributes}{Remove \code{type="text/css"} from \code{style} and \code{link} tags. Other \code{type} attribute values are left intact}

\item{removeTagWhitespace}{Remove space between attributes whenever possible. \strong{Note that this will result in invalid HTML!}}

\item{sortAttributes}{\href{#sorting-attributes--style-classes}{Sort attributes by frequency}}

\item{sortClassName}{\href{#sorting-attributes--style-classes}{Sort style classes by frequency}}

\item{trimCustomFragments}{Trim white space around \code{ignoreCustomFragments}.}

\item{useShortDoctype}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#use_short_doctype}{Replaces the doctype with the short (HTML5) doctype}}

\item{removeAttributeQuotes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_attribute_quotes}{Remove quotes around attributes when possible}}
}
\description{
This function takes a text string as input and minifies it according to large number of options.
The \href{http://perfectionkills.com/experimenting-with-html-minifier/}{blog post} provides a fuller
descriptions of the options.
}
\examples{
input = "<!-- foo --><div>baz</div><!-- bar\\n\\n moo -->"
minifyHTML(input)
cd
}
\seealso{
\href{https://github.com/kangax/html-minifier}{html-minifer} github page
}
